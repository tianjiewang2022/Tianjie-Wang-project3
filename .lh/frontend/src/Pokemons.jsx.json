{
    "sourceFile": "frontend/src/Pokemons.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1702746068495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702746092108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,55 +12,56 @@\n         name: '',\n         color: '',\n         health: 0,\n     })\n+    const [isLoggedIn, setIsLoggedIn] = useState(false);\n \n     async function getAllPokemons() {\n         const response = await axios.get('/api/pokemon/');\n         setPokemons(response.data);\n     }\n \n \n     const components = [];\n-    for(let i = 0; i < pokemons.length; i++) {\n+    for (let i = 0; i < pokemons.length; i++) {\n         const pokemon = pokemons[i];\n-        const pokemonComponent = (<div><Link to={'/pokemon/' + pokemon._id}>{pokemon.name}</Link> {pokemon.color} - {pokemon.health}</div>); \n+        const pokemonComponent = (<div><Link to={'/pokemon/' + pokemon._id}>{pokemon.name}</Link> {pokemon.color} - {pokemon.health}</div>);\n         components.push(pokemonComponent);\n     }\n \n     function setPokemonName(event) {\n         const pokemonName = event.target.value;\n         setPokemonInput({\n-            ...pokemonInput, \n+            ...pokemonInput,\n             /*\n             health: pokemonInput.health,\n             color: pokemonInput.color,\n             */\n-            name: pokemonName \n+            name: pokemonName\n         })\n     }\n \n     function setPokemonColor(event) {\n         const pokemonColor = event.target.value;\n         setPokemonInput({\n-            ...pokemonInput, \n+            ...pokemonInput,\n             /*\n             health: pokemonInput.health,\n             name: pokemonInput.name,\n             */\n-            color: pokemonColor \n+            color: pokemonColor\n         })\n     }\n \n     function setPokemonHealth(event) {\n         const pokemonHealth = event.target.value;\n         setPokemonInput({\n-            ...pokemonInput, \n+            ...pokemonInput,\n             /*\n             health: pokemonInput.health,\n             color: pokemonInput.color,\n             */\n-            health: pokemonHealth, \n+            health: pokemonHealth,\n         })\n     }\n \n     /*\n@@ -72,9 +73,9 @@\n \n     async function createNewPokemon() {\n         const response = await axios.post('/api/pokemon/', pokemonInput);\n         setPokemonInput({\n-            name: '', color: '', health: 0, \n+            name: '', color: '', health: 0,\n         })\n         await getAllPokemons();\n \n     }\n"
                },
                {
                    "date": 1702746107733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,20 @@\n         color: '',\n         health: 0,\n     })\n     const [isLoggedIn, setIsLoggedIn] = useState(false);\n+    useEffect(() => {\n+        async function checkIfUserIsLoggedIn() {\n+          try {\n+            const response = await axios.get('/api/users/isLoggedIn');\n+            setIsLoggedIn(true);\n+          } catch (error) {\n+            setIsLoggedIn(false);\n+          }\n+        }\n+    \n+        checkIfUserIsLoggedIn();\n+      }, []);\n \n     async function getAllPokemons() {\n         const response = await axios.get('/api/pokemon/');\n         setPokemons(response.data);\n"
                },
                {
                    "date": 1702746171486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,8 +94,9 @@\n \n     return (\n         <div>\n             <Header />\n+            <Navbar isLoggedIn={isLoggedIn} />\n             <div>{components}</div>\n             <button onClick={getAllPokemons}>Click here to fetch Pokemons</button>\n             <div>\n                 Name: <input value={pokemonInput.name} onInput={setPokemonName} type='text'></input>\n"
                },
                {
                    "date": 1702746258846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,18 +15,18 @@\n     })\n     const [isLoggedIn, setIsLoggedIn] = useState(false);\n     useEffect(() => {\n         async function checkIfUserIsLoggedIn() {\n-          try {\n-            const response = await axios.get('/api/users/isLoggedIn');\n-            setIsLoggedIn(true);\n-          } catch (error) {\n-            setIsLoggedIn(false);\n-          }\n+            try {\n+                const response = await axios.get('/api/users/isLoggedIn');\n+                setIsLoggedIn(true);\n+            } catch (error) {\n+                setIsLoggedIn(false);\n+            }\n         }\n-    \n+\n         checkIfUserIsLoggedIn();\n-      }, []);\n+    }, []);\n \n     async function getAllPokemons() {\n         const response = await axios.get('/api/pokemon/');\n         setPokemons(response.data);\n@@ -94,9 +94,9 @@\n \n     return (\n         <div>\n             <Header />\n-            <Navbar isLoggedIn={isLoggedIn} />\n+            {/* <Navbar isLoggedIn={isLoggedIn} /> */}\n             <div>{components}</div>\n             <button onClick={getAllPokemons}>Click here to fetch Pokemons</button>\n             <div>\n                 Name: <input value={pokemonInput.name} onInput={setPokemonName} type='text'></input>\n"
                },
                {
                    "date": 1702746313038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState } from 'react';\n+import React, { useState, useEffect } from 'react';\n \n import axios from 'axios';\n import { Link } from 'react-router-dom';\n import Header from './Header';\n"
                },
                {
                    "date": 1702746325255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n \n     return (\n         <div>\n             <Header />\n-            {/* <Navbar isLoggedIn={isLoggedIn} /> */}\n+            <Navbar isLoggedIn={isLoggedIn} />\n             <div>{components}</div>\n             <button onClick={getAllPokemons}>Click here to fetch Pokemons</button>\n             <div>\n                 Name: <input value={pokemonInput.name} onInput={setPokemonName} type='text'></input>\n"
                },
                {
                    "date": 1702746848627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n         <div>\n             <Header />\n             <Navbar isLoggedIn={isLoggedIn} />\n             <div>{components}</div>\n-            <button onClick={getAllPokemons}>Click here to fetch Pokemons</button>\n+            <button onClick={getAllPokemons}>Click here to fetch all status</button>\n             <div>\n                 Name: <input value={pokemonInput.name} onInput={setPokemonName} type='text'></input>\n                 Color: <input value={pokemonInput.color} onInput={setPokemonColor} type='text'></input>\n                 Health: <input value={pokemonInput.health} onInput={setPokemonHealth} type='number'></input>\n"
                },
                {
                    "date": 1702747214614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,11 +8,11 @@\n export default function Pokemons() {\n \n     const [pokemons, setPokemons] = useState([]);\n     const [pokemonInput, setPokemonInput] = useState({\n-        name: '',\n-        color: '',\n-        health: 0,\n+        username: '',\n+        timestamp: '',\n+        textContent: '',\n     })\n     const [isLoggedIn, setIsLoggedIn] = useState(false);\n     useEffect(() => {\n         async function checkIfUserIsLoggedIn() {\n"
                },
                {
                    "date": 1702747234645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n \n     const [pokemons, setPokemons] = useState([]);\n     const [pokemonInput, setPokemonInput] = useState({\n         username: '',\n-        timestamp: '',\n-        textContent: '',\n+    timestamp: '',\n+    textContent: '',\n     })\n     const [isLoggedIn, setIsLoggedIn] = useState(false);\n     useEffect(() => {\n         async function checkIfUserIsLoggedIn() {\n@@ -96,9 +96,9 @@\n         <div>\n             <Header />\n             <Navbar isLoggedIn={isLoggedIn} />\n             <div>{components}</div>\n-            <button onClick={getAllPokemons}>Click here to fetch all status</button>\n+            <button onClick={getAllPokemons}>Click here to fetch all</button>\n             <div>\n                 Name: <input value={pokemonInput.name} onInput={setPokemonName} type='text'></input>\n                 Color: <input value={pokemonInput.color} onInput={setPokemonColor} type='text'></input>\n                 Health: <input value={pokemonInput.health} onInput={setPokemonHealth} type='number'></input>\n"
                },
                {
                    "date": 1702747303588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n \n     const [pokemons, setPokemons] = useState([]);\n     const [pokemonInput, setPokemonInput] = useState({\n         username: '',\n-        timestamp: '',\n-        textContent: '',\n+    timestamp: '',\n+    textContent: '',\n     })\n     const [isLoggedIn, setIsLoggedIn] = useState(false);\n     useEffect(() => {\n         async function checkIfUserIsLoggedIn() {\n"
                },
                {
                    "date": 1702747314874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,10 @@\n \n     const [pokemons, setPokemons] = useState([]);\n     const [pokemonInput, setPokemonInput] = useState({\n         username: '',\n-        timestamp: '',\n-        textContent: '',\n+    timestamp: '',\n+    textContent: '',\n     })\n     const [isLoggedIn, setIsLoggedIn] = useState(false);\n     useEffect(() => {\n         async function checkIfUserIsLoggedIn() {\n"
                }
            ],
            "date": 1702746068495,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport Navbar from './Navbar';\n\nexport default function Pokemons() {\n\n    const [pokemons, setPokemons] = useState([]);\n    const [pokemonInput, setPokemonInput] = useState({\n        name: '',\n        color: '',\n        health: 0,\n    })\n\n    async function getAllPokemons() {\n        const response = await axios.get('/api/pokemon/');\n        setPokemons(response.data);\n    }\n\n\n    const components = [];\n    for(let i = 0; i < pokemons.length; i++) {\n        const pokemon = pokemons[i];\n        const pokemonComponent = (<div><Link to={'/pokemon/' + pokemon._id}>{pokemon.name}</Link> {pokemon.color} - {pokemon.health}</div>); \n        components.push(pokemonComponent);\n    }\n\n    function setPokemonName(event) {\n        const pokemonName = event.target.value;\n        setPokemonInput({\n            ...pokemonInput, \n            /*\n            health: pokemonInput.health,\n            color: pokemonInput.color,\n            */\n            name: pokemonName \n        })\n    }\n\n    function setPokemonColor(event) {\n        const pokemonColor = event.target.value;\n        setPokemonInput({\n            ...pokemonInput, \n            /*\n            health: pokemonInput.health,\n            name: pokemonInput.name,\n            */\n            color: pokemonColor \n        })\n    }\n\n    function setPokemonHealth(event) {\n        const pokemonHealth = event.target.value;\n        setPokemonInput({\n            ...pokemonInput, \n            /*\n            health: pokemonInput.health,\n            color: pokemonInput.color,\n            */\n            health: pokemonHealth, \n        })\n    }\n\n    /*\n    element.setListener('input', function(event) {\n        // do smething\n\n    })\n    */\n\n    async function createNewPokemon() {\n        const response = await axios.post('/api/pokemon/', pokemonInput);\n        setPokemonInput({\n            name: '', color: '', health: 0, \n        })\n        await getAllPokemons();\n\n    }\n\n    return (\n        <div>\n            <Header />\n            <div>{components}</div>\n            <button onClick={getAllPokemons}>Click here to fetch Pokemons</button>\n            <div>\n                Name: <input value={pokemonInput.name} onInput={setPokemonName} type='text'></input>\n                Color: <input value={pokemonInput.color} onInput={setPokemonColor} type='text'></input>\n                Health: <input value={pokemonInput.health} onInput={setPokemonHealth} type='number'></input>\n                <button onClick={createNewPokemon}>Submit New Pokemon</button>\n\n            </div>\n        </div>\n    )\n\n}"
        }
    ]
}