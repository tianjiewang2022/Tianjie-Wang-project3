{
    "sourceFile": "frontend/src/Homepage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1702748133581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702748410228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         setStatusUpdates(response.data);\n     }\n \n     async function logOutUser() {\n-        await axios.post('/api/users/logOut');\n+        await axios.post('/api/user/logOut');\n         setIsLoggedIn(null);\n     }\n \n     function setUsername(event) {\n"
                },
                {
                    "date": 1702749270494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     const [isLoggedIn, setIsLoggedIn] = useState(false);\n     useEffect(() => {\n         async function checkIfUserIsLoggedIn() {\n             try {\n-                const response = await axios.get('/api/users/isLoggedIn');\n+                const response = await axios.get('/api/user/isLoggedIn');\n                 setIsLoggedIn(response.data.username);\n             } catch (error) {\n                 setIsLoggedIn(null);\n             }\n"
                },
                {
                    "date": 1702750224558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         checkIfUserIsLoggedIn();\n     }, []);\n \n     async function getAllStatusUpdates() {\n-        const response = await axios.get('/api/status-updates');\n+        const response = await axios.get('/api/status-updates/');\n         setStatusUpdates(response.data);\n     }\n \n     async function logOutUser() {\n"
                },
                {
                    "date": 1702750239016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         checkIfUserIsLoggedIn();\n     }, []);\n \n     async function getAllStatusUpdates() {\n-        const response = await axios.get('/api/status-updates/');\n+        const response = await axios.get('/api/status-updates');\n         setStatusUpdates(response.data);\n     }\n \n     async function logOutUser() {\n"
                },
                {
                    "date": 1702758950586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         const newStatusUpdate = {\n             ...statusInput,\n             timestamp: new Date().toLocaleString(),\n         };\n-        await axios.post('/api/status-updates', newStatusUpdate);\n+        await axios.post('/api/statusUpdates', newStatusUpdate);\n         setStatusInput({ username: '', timestamp: '', textContent: '' });\n         await getAllStatusUpdates();\n     }\n \n"
                },
                {
                    "date": 1702758961528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n         checkIfUserIsLoggedIn();\n     }, []);\n \n     async function getAllStatusUpdates() {\n-        const response = await axios.get('/api/status-updates');\n+        const response = await axios.get('/api/statusUpdates');\n         setStatusUpdates(response.data);\n     }\n \n     async function logOutUser() {\n"
                },
                {
                    "date": 1702760832364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,90 +1,75 @@\n import React, { useState, useEffect } from 'react';\n-\n import axios from 'axios';\n-import { Link } from 'react-router-dom';\n import Header from './Header';\n import Navbar from './Navbar';\n \n export default function HomePage() {\n+  const [statusUpdates, setStatusUpdates] = useState([]);\n+  const [statusInput, setStatusInput] = useState({\n+    textContent: '',\n+  });\n+  const [isLoggedIn, setIsLoggedIn] = useState(false);\n \n-    const [statusUpdates, setStatusUpdates] = useState([]);\n-    const [statusInput, setStatusInput] = useState({\n-        username: '',\n-        timestamp: '',\n-        textContent: '',\n-    })\n-    const [isLoggedIn, setIsLoggedIn] = useState(false);\n-    useEffect(() => {\n-        async function checkIfUserIsLoggedIn() {\n-            try {\n-                const response = await axios.get('/api/user/isLoggedIn');\n-                setIsLoggedIn(response.data.username);\n-            } catch (error) {\n-                setIsLoggedIn(null);\n-            }\n-        }\n-\n-        checkIfUserIsLoggedIn();\n-    }, []);\n-\n-    async function getAllStatusUpdates() {\n-        const response = await axios.get('/api/statusUpdates');\n-        setStatusUpdates(response.data);\n-    }\n-\n-    async function logOutUser() {\n-        await axios.post('/api/user/logOut');\n+  useEffect(() => {\n+    async function checkIfUserIsLoggedIn() {\n+      try {\n+        const response = await axios.get('/api/user/isLoggedIn');\n+        setIsLoggedIn(response.data.username);\n+      } catch (error) {\n         setIsLoggedIn(null);\n+      }\n     }\n \n-    function setUsername(event) {\n-        const newUsername = event.target.value;\n-        setStatusInput({ ...statusInput, username: newUsername });\n-    }\n+    checkIfUserIsLoggedIn();\n+  }, []);\n \n-    async function createNewStatusUpdate() {\n-        // Set the current time as the timestamp when creating a new status update\n-        const newStatusUpdate = {\n-            ...statusInput,\n-            timestamp: new Date().toLocaleString(),\n-        };\n-        await axios.post('/api/statusUpdates', newStatusUpdate);\n-        setStatusInput({ username: '', timestamp: '', textContent: '' });\n-        await getAllStatusUpdates();\n-    }\n+  async function getAllStatusUpdates() {\n+    const response = await axios.get('/api/statusUpdates');\n+    setStatusUpdates(response.data);\n+  }\n \n-    function setTextContent(event) {\n-        const newTextContent = event.target.value;\n-        setStatusInput({ ...statusInput, textContent: newTextContent });\n-    }\n+  async function logOutUser() {\n+    await axios.post('/api/user/logOut');\n+    setIsLoggedIn(null);\n+  }\n \n+  async function createNewStatusUpdate() {\n+    // Set the current time as the timestamp when creating a new status update\n+    const newStatusUpdate = {\n+      ...statusInput,\n+      username: isLoggedIn, // Set the username to the logged-in user\n+      timestamp: new Date().toLocaleString(),\n+    };\n \n\\ No newline at end of file\n-    async function createNewStatusUpdate() {\n-        await axios.post('/api/statusUpdates', statusInput);\n-        setStatusInput({ username: '', timestamp: '', textContent: '' });\n-        await getAllStatusUpdates();\n-    }\n+    await axios.post('/api/statusUpdates', newStatusUpdate);\n+    setStatusInput({ textContent: '' });\n+    await getAllStatusUpdates();\n+  }\n \n+  function setTextContent(event) {\n+    const newTextContent = event.target.value;\n+    setStatusInput({ ...statusInput, textContent: newTextContent });\n+  }\n \n-    return (\n-        <div>\n-            <Header isLoggedIn={isLoggedIn} logOutUser={logOutUser} />\n-            <Navbar isLoggedIn={isLoggedIn} />\n-            <div>\n-                {statusUpdates.map((statusUpdate) => (\n-                    <div key={statusUpdate._id}>\n-                        <p>{statusUpdate.username}</p>\n-                        <p>{statusUpdate.timestamp}</p>\n-                        <p>{statusUpdate.textContent}</p>\n-                    </div>\n-                ))}\n-            </div>\n-            <button onClick={getAllStatusUpdates}>Click here to fetch all status updates</button>\n-            <div>\n-                Username: <input value={statusInput.username} onChange={setUsername} type='text' />\n-                Text Content: <input value={statusInput.textContent} onChange={setTextContent} type='text' />\n-                <button onClick={createNewStatusUpdate}>Submit New Status Update</button>\n-            </div>\n-        </div>\n-    );\n-};\n+  return (\n+    <div>\n+      <Header isLoggedIn={isLoggedIn} logOutUser={logOutUser} />\n+      <Navbar isLoggedIn={isLoggedIn} />\n+      <div>\n+        {statusUpdates.map((statusUpdate) => (\n+          <div key={statusUpdate._id}>\n+            <p>{statusUpdate.username}</p>\n+            <p>{statusUpdate.timestamp}</p>\n+            <p>{statusUpdate.textContent}</p>\n+          </div>\n+        ))}\n+      </div>\n+      <button onClick={getAllStatusUpdates}>Click here to fetch all status updates</button>\n+      <div>\n+        {/* Omit the username input, as it will be automatically set to the logged-in user */}\n+        Text Content: <input value={statusInput.textContent} onChange={setTextContent} type='text' />\n+        <button onClick={createNewStatusUpdate}>Submit New Status Update</button>\n+      </div>\n+    </div>\n+  );\n+}\n"
                },
                {
                    "date": 1702761993550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,10 @@\n     async function createNewStatusUpdate() {\n         // Set the current time as the timestamp when creating a new status update\n         const newStatusUpdate = {\n             ...statusInput,\n-            username: isLoggedIn, // Set the username to the logged-in user\n+            // Ensure that the username is a string\n+      username: String(statusInput.username), // Set the username to the logged-in user\n             timestamp: new Date().toLocaleString(),\n         };\n \n         await axios.post('/api/statusUpdates', newStatusUpdate);\n"
                }
            ],
            "date": 1702748133581,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\nimport Navbar from './Navbar';\n\nexport default function HomePage() {\n\n    const [statusUpdates, setStatusUpdates] = useState([]);\n    const [statusInput, setStatusInput] = useState({\n        username: '',\n        timestamp: '',\n        textContent: '',\n    })\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    useEffect(() => {\n        async function checkIfUserIsLoggedIn() {\n            try {\n                const response = await axios.get('/api/users/isLoggedIn');\n                setIsLoggedIn(response.data.username);\n            } catch (error) {\n                setIsLoggedIn(null);\n            }\n        }\n\n        checkIfUserIsLoggedIn();\n    }, []);\n\n    async function getAllStatusUpdates() {\n        const response = await axios.get('/api/status-updates');\n        setStatusUpdates(response.data);\n    }\n\n    async function logOutUser() {\n        await axios.post('/api/users/logOut');\n        setIsLoggedIn(null);\n    }\n\n    function setUsername(event) {\n        const newUsername = event.target.value;\n        setStatusInput({ ...statusInput, username: newUsername });\n    }\n\n    async function createNewStatusUpdate() {\n        // Set the current time as the timestamp when creating a new status update\n        const newStatusUpdate = {\n            ...statusInput,\n            timestamp: new Date().toLocaleString(),\n        };\n        await axios.post('/api/status-updates', newStatusUpdate);\n        setStatusInput({ username: '', timestamp: '', textContent: '' });\n        await getAllStatusUpdates();\n    }\n\n    function setTextContent(event) {\n        const newTextContent = event.target.value;\n        setStatusInput({ ...statusInput, textContent: newTextContent });\n    }\n\n\n    async function createNewStatusUpdate() {\n        await axios.post('/api/status-updates', statusInput);\n        setStatusInput({ username: '', timestamp: '', textContent: '' });\n        await getAllStatusUpdates();\n    }\n\n\n    return (\n        <div>\n            <Header isLoggedIn={isLoggedIn} logOutUser={logOutUser} />\n            <Navbar isLoggedIn={isLoggedIn} />\n            <div>\n                {statusUpdates.map((statusUpdate) => (\n                    <div key={statusUpdate._id}>\n                        <p>{statusUpdate.username}</p>\n                        <p>{statusUpdate.timestamp}</p>\n                        <p>{statusUpdate.textContent}</p>\n                    </div>\n                ))}\n            </div>\n            <button onClick={getAllStatusUpdates}>Click here to fetch all status updates</button>\n            <div>\n                Username: <input value={statusInput.username} onChange={setUsername} type='text' />\n                Text Content: <input value={statusInput.textContent} onChange={setTextContent} type='text' />\n                <button onClick={createNewStatusUpdate}>Submit New Status Update</button>\n            </div>\n        </div>\n    );\n};"
        }
    ]
}