{
    "sourceFile": "backend/api/statusUpdates.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1702756322600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702761110658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n-\n-// statusUpdate.routes.js\n+// statusUpdates.js\n const express = require('express');\n const router = express.Router();\n const StatusUpdateModel = require('../db/statusUpdates/statusUpdates.model');\n const jwt = require('jsonwebtoken');\n@@ -11,19 +10,22 @@\n     console.log('Received new status update:', newStatusUpdate);\n \n     const username = req.cookies.username;\n \n+    // Verify the user's token to get the username\n     let decryptedUsername;\n     try {\n         decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n     } catch (e) {\n         return res.status(404).send(\"Invalid request\");\n     }\n \n+    // Set the username and timestamp in the new status update\n     newStatusUpdate.username = decryptedUsername;\n     newStatusUpdate.timestamp = new Date().toLocaleString(); // Set current time as timestamp\n \n     try {\n+        // Create the status update in the database\n         const createStatusUpdateResponse = await StatusUpdateModel.create(newStatusUpdate);\n         console.log('Status Update Successfully Created:', createStatusUpdateResponse);\n         return res.send(\"Status Update Successfully Created: \" + createStatusUpdateResponse);\n     } catch (error) {\n@@ -35,8 +37,9 @@\n // GET /api/status-updates\n router.get('/', async function (req, res) {\n     const username = req.cookies.username;\n \n+    // Verify the user's token to get the username\n     let decryptedUsername;\n     try {\n         decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n     } catch (e) {\n"
                },
                {
                    "date": 1702761732338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,26 +5,30 @@\n const jwt = require('jsonwebtoken');\n \n // POST /api/status-updates\n router.post('/', async function (req, res) {\n-    const newStatusUpdate = req.body;\n-    console.log('Received new status update:', newStatusUpdate);\n+    try {\n+        const newStatusUpdate = req.body;\n+        console.log('Received new status update:', newStatusUpdate);\n \n-    const username = req.cookies.username;\n+        const username = req.cookies.username;\n \n-    // Verify the user's token to get the username\n-    let decryptedUsername;\n-    try {\n-        decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n-    } catch (e) {\n-        return res.status(404).send(\"Invalid request\");\n-    }\n+        // Verify the user's token to get the username\n+        let decryptedUsername;\n+        try {\n+            decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n+        } catch (e) {\n+            console.error('Error verifying token:', e);\n+            return res.status(404).send(\"Invalid request\");\n+        }\n \n-    // Set the username and timestamp in the new status update\n-    newStatusUpdate.username = decryptedUsername;\n-    newStatusUpdate.timestamp = new Date().toLocaleString(); // Set current time as timestamp\n+        // Set the username and timestamp in the new status update\n+        newStatusUpdate.username = decryptedUsername;\n+        newStatusUpdate.timestamp = new Date().toLocaleString(); // Set current time as timestamp\n \n-    try {\n+        // Debugging: Log the newStatusUpdate before saving it\n+        console.log('New status update before saving:', newStatusUpdate);\n+\n         // Create the status update in the database\n         const createStatusUpdateResponse = await StatusUpdateModel.create(newStatusUpdate);\n         console.log('Status Update Successfully Created:', createStatusUpdateResponse);\n         return res.send(\"Status Update Successfully Created: \" + createStatusUpdateResponse);\n@@ -34,29 +38,7 @@\n     }\n });\n \n // GET /api/status-updates\n-router.get('/', async function (req, res) {\n-    const username = req.cookies.username;\n+// ... (unchanged)\n \n-    // Verify the user's token to get the username\n-    let decryptedUsername;\n-    try {\n-        decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n-    } catch (e) {\n-        return res.status(404).send(\"Invalid request\");\n-    }\n-\n-    try {\n-        // Fetch status updates for the logged-in user\n-        const userStatusUpdates = await StatusUpdateModel.find({ username: decryptedUsername });\n-        // Display user status updates on the homepage\n-        res.cookie(\"statusUpdateCount\", userStatusUpdates.length);\n-        res.send(userStatusUpdates);\n-    } catch (error) {\n-        return res.status(500).send(error);\n-    }\n-});\n-\n-// Add other routes as needed\n-\n module.exports = router;\n"
                },
                {
                    "date": 1702763113193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,31 @@\n         return res.status(500).send(error);\n     }\n });\n \n+\n // GET /api/status-updates\n-// ... (unchanged)\n+router.get('/', async function (req, res) {\n+    const username = req.cookies.username;\n \n+    // Verify the user's token to get the username\n+    let decryptedUsername;\n+    try {\n+        decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n+    } catch (e) {\n+        return res.status(404).send(\"Invalid request\");\n+    }\n+\n+    try {\n+        // Fetch status updates for the logged-in user\n+        const userStatusUpdates = await StatusUpdateModel.find({ username: decryptedUsername });\n+        // Display user status updates on the homepage\n+        res.cookie(\"statusUpdateCount\", userStatusUpdates.length);\n+        res.send(userStatusUpdates);\n+    } catch (error) {\n+        return res.status(500).send(error);\n+    }\n+});\n+\n+// Add other routes as needed\n+\n module.exports = router;\n"
                },
                {
                    "date": 1702764150036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,10 @@\n \n     // Verify the user's token to get the username\n     let decryptedUsername;\n     try {\n-        decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n+        const decodedToken = jwt.verify(username, \"HUNTERS_PASSWORD\");\n+        decryptedUsername = decodedToken.username;\n     } catch (e) {\n         return res.status(404).send(\"Invalid request\");\n     }\n \n"
                },
                {
                    "date": 1702764171797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,10 @@\n \n         // Verify the user's token to get the username\n         let decryptedUsername;\n         try {\n-            decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n+            const decodedToken = jwt.verify(username, \"HUNTERS_PASSWORD\");\n+    decryptedUsername = decodedToken.username;\n         } catch (e) {\n             console.error('Error verifying token:', e);\n             return res.status(404).send(\"Invalid request\");\n         }\n"
                },
                {
                    "date": 1702766203517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n const express = require('express');\n const router = express.Router();\n const StatusUpdateModel = require('../db/statusUpdates/statusUpdates.model');\n const jwt = require('jsonwebtoken');\n+const axios = require('axios'); // Import axios for making HTTP requests\n \n // POST /api/status-updates\n router.post('/', async function (req, res) {\n     try {\n"
                },
                {
                    "date": 1702766221832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-// statusUpdates.js\n const express = require('express');\n const router = express.Router();\n const StatusUpdateModel = require('../db/statusUpdates/statusUpdates.model');\n const jwt = require('jsonwebtoken');\n@@ -10,22 +9,14 @@\n     try {\n         const newStatusUpdate = req.body;\n         console.log('Received new status update:', newStatusUpdate);\n \n-        const username = req.cookies.username;\n+        // Retrieve the username from the api/user endpoint\n+        const userResponse = await axios.get('/api/user/isLoggedIn');\n+        const username = userResponse.data.username;\n \n-        // Verify the user's token to get the username\n-        let decryptedUsername;\n-        try {\n-            const decodedToken = jwt.verify(username, \"HUNTERS_PASSWORD\");\n-            decryptedUsername = decodedToken.username;\n-        } catch (e) {\n-            console.error('Error verifying token:', e);\n-            return res.status(404).send(\"Invalid request\");\n-        }\n-\n         // Set the username and timestamp in the new status update\n-        newStatusUpdate.username = decryptedUsername;\n+        newStatusUpdate.username = username;\n         newStatusUpdate.timestamp = new Date().toLocaleString(); // Set current time as timestamp\n \n         // Debugging: Log the newStatusUpdate before saving it\n         console.log('New status update before saving:', newStatusUpdate);\n@@ -39,25 +30,18 @@\n         return res.status(500).send(error);\n     }\n });\n \n-\n // GET /api/status-updates\n router.get('/', async function (req, res) {\n-    const username = req.cookies.username;\n-\n-    // Verify the user's token to get the username\n-    let decryptedUsername;\n     try {\n-        const decodedToken = jwt.verify(username, \"HUNTERS_PASSWORD\");\n-        decryptedUsername = decodedToken.username;\n-    } catch (e) {\n-        return res.status(404).send(\"Invalid request\");\n-    }\n+        // Retrieve the username from the api/user endpoint\n+        const userResponse = await axios.get('/api/user/isLoggedIn');\n+        const username = userResponse.data.username;\n \n-    try {\n         // Fetch status updates for the logged-in user\n-        const userStatusUpdates = await StatusUpdateModel.find({ username: decryptedUsername });\n+        const userStatusUpdates = await StatusUpdateModel.find({ username });\n+        \n         // Display user status updates on the homepage\n         res.cookie(\"statusUpdateCount\", userStatusUpdates.length);\n         res.send(userStatusUpdates);\n     } catch (error) {\n"
                },
                {
                    "date": 1702767482516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,11 @@\n         console.log('Received new status update:', newStatusUpdate);\n \n         // Retrieve the username from the api/user endpoint\n         const userResponse = await axios.get('/api/user/isLoggedIn');\n-        const username = userResponse.data.username;\n \n-        // Set the username and timestamp in the new status update\n-        newStatusUpdate.username = username;\n+\n+\n         newStatusUpdate.timestamp = new Date().toLocaleString(); // Set current time as timestamp\n \n         // Debugging: Log the newStatusUpdate before saving it\n         console.log('New status update before saving:', newStatusUpdate);\n"
                }
            ],
            "date": 1702756322600,
            "name": "Commit-0",
            "content": "\n// statusUpdate.routes.js\nconst express = require('express');\nconst router = express.Router();\nconst StatusUpdateModel = require('../db/statusUpdates/statusUpdates.model');\nconst jwt = require('jsonwebtoken');\n\n// POST /api/status-updates\nrouter.post('/', async function (req, res) {\n    const newStatusUpdate = req.body;\n    console.log('Received new status update:', newStatusUpdate);\n\n    const username = req.cookies.username;\n\n    let decryptedUsername;\n    try {\n        decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n    } catch (e) {\n        return res.status(404).send(\"Invalid request\");\n    }\n\n    newStatusUpdate.username = decryptedUsername;\n    newStatusUpdate.timestamp = new Date().toLocaleString(); // Set current time as timestamp\n\n    try {\n        const createStatusUpdateResponse = await StatusUpdateModel.create(newStatusUpdate);\n        console.log('Status Update Successfully Created:', createStatusUpdateResponse);\n        return res.send(\"Status Update Successfully Created: \" + createStatusUpdateResponse);\n    } catch (error) {\n        console.error('Error creating status update:', error);\n        return res.status(500).send(error);\n    }\n});\n\n// GET /api/status-updates\nrouter.get('/', async function (req, res) {\n    const username = req.cookies.username;\n\n    let decryptedUsername;\n    try {\n        decryptedUsername = jwt.verify(username, \"HUNTERS_PASSWORD\");\n    } catch (e) {\n        return res.status(404).send(\"Invalid request\");\n    }\n\n    try {\n        // Fetch status updates for the logged-in user\n        const userStatusUpdates = await StatusUpdateModel.find({ username: decryptedUsername });\n        // Display user status updates on the homepage\n        res.cookie(\"statusUpdateCount\", userStatusUpdates.length);\n        res.send(userStatusUpdates);\n    } catch (error) {\n        return res.status(500).send(error);\n    }\n});\n\n// Add other routes as needed\n\nmodule.exports = router;\n"
        }
    ]
}