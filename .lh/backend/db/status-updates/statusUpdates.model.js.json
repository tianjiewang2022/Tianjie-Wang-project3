{
    "sourceFile": "backend/db/status-updates/statusUpdates.model.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1702801421883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702801441909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n const StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n \n async function getStatusUpdatesWithUserDetails() {\n     try {\n-        const statusUpdates = await StatusUpdate.find();\n+        const statusUpdates = await statusUpdate.find();\n \n         // Fetch user details for each status update\n         const statusUpdatesWithUserDetails = await Promise.all(\n             statusUpdates.map(async (update) => {\n"
                },
                {
                    "date": 1702801454653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n const StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n \n async function getStatusUpdatesWithUserDetails() {\n     try {\n-        const statusUpdates = await statusUpdate.find();\n+        const statusUpdates = await statusUpdates.find();\n \n         // Fetch user details for each status update\n         const statusUpdatesWithUserDetails = await Promise.all(\n             statusUpdates.map(async (update) => {\n"
                },
                {
                    "date": 1702801494681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n const StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n \n async function getStatusUpdatesWithUserDetails() {\n     try {\n-        const statusUpdates = await statusUpdates.find();\n+        const statusUpdates = await statusUpdates.findOne();\n \n         // Fetch user details for each status update\n         const statusUpdatesWithUserDetails = await Promise.all(\n             statusUpdates.map(async (update) => {\n"
                },
                {
                    "date": 1702801519593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n const StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n \n async function getStatusUpdatesWithUserDetails() {\n     try {\n-        const statusUpdates = await statusUpdates.findOne();\n+        const statusUpdates = await statusUpdates.findUserByUsername();\n \n         // Fetch user details for each status update\n         const statusUpdatesWithUserDetails = await Promise.all(\n             statusUpdates.map(async (update) => {\n"
                },
                {
                    "date": 1702801533427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+// statusUpdate.model.js\n+import { model } from 'mongoose';\n+import { statusUpdateSchema } from './statusUpdates.schema';\n+\n+\n+const StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n+\n+async function getStatusUpdatesWithUserDetails() {\n+    try {\n+        const statusUpdates = await statusUpdates.find();\n+\n+        // Fetch user details for each status update\n+        const statusUpdatesWithUserDetails = await Promise.all(\n+            statusUpdates.map(async (update) => {\n+                const user = await UserModel.findUserByUsername(update.username);\n+                return {\n+                    _id: update._id,\n+                    timestamp: update.timestamp,\n+                    textContent: update.textContent,\n+                    user: {\n+                        username: user.username,\n+                        joinTimestamp: user.joinTimestamp,\n+                        description: user.description,\n+                    },\n+                };\n+            })\n+        );\n+\n+        return statusUpdatesWithUserDetails;\n+    } catch (error) {\n+        throw error;\n+    }\n+}\n+\n+module.exports = {\n+    getStatusUpdatesWithUserDetails,\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702801563387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n const StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n \n async function getStatusUpdatesWithUserDetails() {\n     try {\n-        const statusUpdates = await statusUpdates.find();\n+        const statusUpdates = await statusUpdate.find();\n \n         // Fetch user details for each status update\n         const statusUpdatesWithUserDetails = await Promise.all(\n             statusUpdates.map(async (update) => {\n@@ -33,42 +33,5 @@\n }\n \n module.exports = {\n     getStatusUpdatesWithUserDetails,\n-};\n-// statusUpdate.model.js\n-import { model } from 'mongoose';\n-import { statusUpdateSchema } from './statusUpdates.schema';\n-\n-\n-const StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n-\n-async function getStatusUpdatesWithUserDetails() {\n-    try {\n-        const statusUpdates = await statusUpdates.findUserByUsername();\n-\n-        // Fetch user details for each status update\n-        const statusUpdatesWithUserDetails = await Promise.all(\n-            statusUpdates.map(async (update) => {\n-                const user = await UserModel.findUserByUsername(update.username);\n-                return {\n-                    _id: update._id,\n-                    timestamp: update.timestamp,\n-                    textContent: update.textContent,\n-                    user: {\n-                        username: user.username,\n-                        joinTimestamp: user.joinTimestamp,\n-                        description: user.description,\n-                    },\n-                };\n-            })\n-        );\n-\n-        return statusUpdatesWithUserDetails;\n-    } catch (error) {\n-        throw error;\n-    }\n-}\n-\n-module.exports = {\n-    getStatusUpdatesWithUserDetails,\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702801570975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,13 @@\n import { model } from 'mongoose';\n import { statusUpdateSchema } from './statusUpdates.schema';\n \n \n-const StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n+const StatusUpdate = mongoose.model('StatusUpdate', statusUpdateSchema);\n \n async function getStatusUpdatesWithUserDetails() {\n     try {\n-        const statusUpdates = await statusUpdate.find();\n+        const statusUpdates = await StatusUpdate.find();\n \n         // Fetch user details for each status update\n         const statusUpdatesWithUserDetails = await Promise.all(\n             statusUpdates.map(async (update) => {\n"
                }
            ],
            "date": 1702801421882,
            "name": "Commit-0",
            "content": "// statusUpdate.model.js\nimport { model } from 'mongoose';\nimport { statusUpdateSchema } from './statusUpdates.schema';\n\n\nconst StatusUpdateModel = model('StatusUpdate', statusUpdateSchema);\n\nasync function getStatusUpdatesWithUserDetails() {\n    try {\n        const statusUpdates = await StatusUpdate.find();\n\n        // Fetch user details for each status update\n        const statusUpdatesWithUserDetails = await Promise.all(\n            statusUpdates.map(async (update) => {\n                const user = await UserModel.findUserByUsername(update.username);\n                return {\n                    _id: update._id,\n                    timestamp: update.timestamp,\n                    textContent: update.textContent,\n                    user: {\n                        username: user.username,\n                        joinTimestamp: user.joinTimestamp,\n                        description: user.description,\n                    },\n                };\n            })\n        );\n\n        return statusUpdatesWithUserDetails;\n    } catch (error) {\n        throw error;\n    }\n}\n\nmodule.exports = {\n    getStatusUpdatesWithUserDetails,\n};"
        }
    ]
}